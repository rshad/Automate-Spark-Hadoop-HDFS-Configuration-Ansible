# -------------------------------- Installing Hadoop ------------------------------------------ #

# Note:  We do not need to donwload the java package from internet, we have our own already downloaded.
- name: Extracting Hadoop package
  unarchive:
    src: "{{ hadoop_package_file }}"
    dest: "{{ download_folder }}"
  when: inventory_hostname in groups['masters']
  

- name: deleting old versions of /opt/hadoop

  file:
    state: absent
    path: /opt/hadoop

- name: "Changing the hadoop folder name from {{ hadoop_folder_path_name_old }} to {{ download_folder }}/{{ hadoop_folder_name_new }}"

  command: "mv {{ hadoop_folder_path_name_old }}  {{ download_folder }}/{{ hadoop_folder_name_new }}"
  when: inventory_hostname in groups['masters']

- name: Copying hadoop/ folder to the storage hosts ...
  synchronize:
    src: "{{ download_folder }}/{{ hadoop_folder_name_new }}"
    dest: "{{ download_folder }}/"
  when: inventory_hostname in groups['storage']  

# Setting the required path for hadoop ...
- name: "Writing Hadoop Path's into /home/{{ app_user }}/.bashrc ..."
  lineinfile:
    path: "/home/{{ app_user }}/.bashrc"
    line: "{{ item }}"

  with_items:
    - export JAVA_HOME=/opt/jdk1.8.0_161
    - export JRE_HOME=/opt/jdk1.8.0_161/jre 
    - export HADOOP_PREFIX=/opt/hadoop
    - export HADOOP_HOME=$HADOOP_PREFIX
    - export HADOOP_COMMON_HOME=$HADOOP_PREFIX
    - export HADOOP_CONF_DIR=$HADOOP_PREFIX/etc/hadoop
    - export HADOOP_HDFS_HOME=$HADOOP_PREFIX
    - export HADOOP_MAPRED_HOME=$HADOOP_PREFIX
    - export HADOOP_YARN_HOME=$HADOOP_PREFIX
    - export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin:$HADOOP_PREFIX/sbin:$HADOOP_PREFIX/bin


# Applying the changes
- name: applying the changes ...
  action: "shell source /home/{{ app_user }}/.bashrc"

- name: refreshing the terminal bash in order to refresh the environment variables
  shell: bash

# -------------------------------- Configuring Hadoop ------------------------------------------ #

- name: installing pip
  easy_install:
    name: pip
    state: latest
 
#- name: Installing lxml python library ...
#  pip:
#    name: lxml
#    executable: pip3

- name: Modifying the file /opt/hadoop/etc/hadoop/core-site.xml  ...
  xml:
    path: /opt/hadoop/etc/hadoop/core-site.xml
    xpath: /configuration/property        
    value:


- name: Modifying the file /opt/hadoop/etc/hadoop/core-site.xml  ...
  xml:
    path: /opt/hadoop/etc/hadoop/core-site.xml
    xpath: /configuration/property/name
    value: fs.defaultFS
  

- name: Modifying the file /opt/hadoop/etc/hadoop/core-site.xml  ...
  xml:
    path: /opt/hadoop/etc/hadoop/core-site.xml
    xpath: /configuration/property/value
    value: hdfs://master:9000/


- name: creating /tmp/spark-events in case it does not exists

  file:
    path: /tmp/spark-events
    state: directory

- name: changing ownership for /tmp/spark-events directory

  command: "{{ item }}"

  args:
    warn: False
  
  with_items:
    - "chown {{ app_user }}:{{ app_user }} /tmp/spark-events -R"
    - "chgrp {{ app_user }} /tmp/spark-events -R"


- name: "create the folder /home/{{ app_user }}/datanode if it does not exists"
  
  file:
    path: "/home/{{ app_user }}/datanode"
    state: directory

- name: "create the folder /home/{{ app_user }}/namenode if it does not exists"

  file:
    path: "/home/{{ app_user }}/namenode"
    state: directory 

  when: inventory_hostname in groups['masters']
    
- name: changing ownership for datanode and namenode folders

  command: "{{ item }}"

  args: 
    warn: False  

  with_items:
    - "chown {{ app_user }}:{{ app_user }} /opt/hadoop/ -R" 
    - "chgrp {{ app_user }} /opt/hadoop/ -R"
    - "chown {{ app_user }} /home/{{ app_user }}/datanode/"
    - "chgrp {{ app_user }} /home/{{ app_user }}/datanode/"

- name: changing ownership for datanode and namenode folders

  command: "{{ item }}"

  args:
    warn: False

  with_items:
    - "chown {{ app_user }} /home/{{ app_user }}/namenode/"
    - "chgrp {{ app_user }} /home/{{ app_user }}/namenode/"

  when: inventory_hostname in groups['masters']

- name: changing the name of the old template of /opt/hadoop/etc/hadoop/hdfs-site.xml ... to .original
  command: cp /opt/hadoop/etc/hadoop/hdfs-site.xml /opt/hadoop/etc/hadoop/hdfs-site.xml.original
  


- name: adding  /opt/hadoop/etc/hadoop/hdfs-site.xml with new content - MASTER... 

  template:
    src: ../templates/template-hdfs-site-masters-xml.j2
    dest: /opt/hadoop/etc/hadoop/hdfs-site.xml

  when: inventory_hostname in groups['masters']


- name: adding  /opt/hadoop/etc/hadoop/hdfs-site.xml with new content - SLAVES ...

  template:
    src: ../templates/template-hdfs-site-slaves-xml.j2
    dest: /opt/hadoop/etc/hadoop/hdfs-site.xml

  when: inventory_hostname in groups['slaves']


- name: Creating the file /opt/hadoop/etc/hadoop/mapred-site.xml, using template ..

  template:
    src: ../templates/template-mapred-site-xml.j2
    dest: /opt/hadoop/etc/hadoop/mapred-site.xml  

  when: inventory_hostname in groups['masters']


- name: Creating the file /opt/hadoop/etc/hadoop/yarn-site.xml, using template ..

  template:
    src: ../templates/template-yarn-site-xml.j2
    dest: /opt/hadoop/etc/hadoop/yarn-site.xml


- name: Adding the names of the hosts of the slaves including the master ...
  lineinfile:
    path: /opt/hadoop/etc/hadoop/slaves
    line: "{{ item }}" 

  become: yes
  with_items: "{{ hosts }}"

  when: inventory_hostname in groups['masters']

 
- name: Modifying the file /etc/sysctl.conf  ...
  lineinfile:
    path: /etc/sysctl.conf
    line: "{{ item }}"

  with_items:
    - net.ipv6.conf.all.disable_ipv6 = 1
    - net.ipv6.conf.default.disable_ipv6 = 1

  become: yes
