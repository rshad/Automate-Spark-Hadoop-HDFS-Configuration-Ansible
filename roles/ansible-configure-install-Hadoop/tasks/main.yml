# first of all, we create hadoop user, so this user will be the one used to configure Hadoopa and HDFS
#- name: creating hadoop user
#  user:
#    name: hadoop
#    password: "{{ hadoop }}"
#    state: present
#    shell: /bin/bash    
#    system: no
#    createhome: yes
#    home: /home/hadoop
#  become: yes
# -------------------------------- Installing Hadoop ------------------------------------------ #

# Note:  We do not need to donwload the java package from internet, we have our own already downloaded.
#- name: Extracting Hadoop package

#  unarchive:
#    src: "{{ hadoop_package_file }}"
#    dest: "{{ download_folder }}"
#  when: inventory_hostname in groups['masters']
#  become: yes
  
#- name: "Changing the hadoop folder name from {{ hadoop_folder_path_name_old }} to {{ download_folder }}/{{ hadoop_folder_name_new }}"

#  command: "mv {{ hadoop_folder_path_name_old }}  {{ download_folder }}/{{ hadoop_folder_name_new }}"
#  when: inventory_hostname in groups['masters']
#  become: yes

#- name: Copying hadoop/ folder to the slaves hosts ...
#  synchronize:
#    src: "{{ download_folder }}/{{ hadoop_folder_name_new }}"
#    dest: "{{ download_folder }}/"
#  when: inventory_hostname in groups['slaves']  
#  become: yes

# Setting the required path for hadoop ...
#- name: Writing Hadoop Path's into /home/hadoop/.bashrc ...
#  lineinfile:
#    path: /home/hadoop/.bashrc
#    line: "{{ item }}"

#  with_items:
#    - export JAVA_HOME=/opt/jdk1.8.0_161
#    - export JRE_HOME=/opt/jdk1.8.0_161/jre 
#    - export HADOOP_PREFIX=/opt/hadoop
#    - export HADOOP_HOME=$HADOOP_PREFIX
#    - export HADOOP_COMMON_HOME=$HADOOP_PREFIX
#    - export HADOOP_CONF_DIR=$HADOOP_PREFIX/etc/hadoop
#    - export HADOOP_HDFS_HOME=$HADOOP_PREFIX
#    - export HADOOP_MAPRED_HOME=$HADOOP_PREFIX
#    - export HADOOP_YARN_HOME=$HADOOP_PREFIX
#    - export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin:$HADOOP_PREFIX/sbin:$HADOOP_PREFIX/bin

#  become: yes

# Applying the changes
#- name: applying the changes ...
#  action: shell source /home/hadoop/.bashrc
#  become: yes

#- name: refreshing the terminal bash in order to refresh the environment variables
#  shell: bash
#  become: yes  

# -------------------------------- Configuring Hadoop ------------------------------------------ #

- name: Installing lxml python library ...
  command: "{{ item }}"
  
  with_items:
    - pip3 install --upgrade pip
    - pip3 install lxml
  become: yes

- name: Modifying the file /opt/hadoop/etc/hadoop/core-site.xml  ...
  xml:
    path: /opt/hadoop/etc/hadoop/core-site.xml
    xpath: /configuration/property        
    value:
  become: yes

- name: Modifying the file /opt/hadoop/etc/hadoop/core-site.xml  ...
  xml:
    path: /opt/hadoop/etc/hadoop/core-site.xml
    xpath: /configuration/property/name
    value: fs.defaultFS
  become: yes

- name: Modifying the file /opt/hadoop/etc/hadoop/core-site.xml  ...
  xml:
    path: /opt/hadoop/etc/hadoop/core-site.xml
    xpath: /configuration/property/value
    value: hdfs://central-machine:9000/
  become: yes

- name: Creating the required folders for Hadoop ...
  command: "{{ item }}"
  args: 
    warn: False  
  with_items:
    - chown hadoop /opt/hadoop/ -R 
    - chgrp hadoop /opt/hadoop/ -R
    - mkdir /home/hadoop/datanode
    - chown hadoop /home/hadoop/datanode/
    - chgrp hadoop /home/hadoop/datanode/
  become: yes

- name: changing the name of the old template of /opt/hadoop/etc/hadoop/hdfs-site.xml ... to .original
  command: cp /opt/hadoop/etc/hadoop/hdfs-site.xml /opt/hadoop/etc/hadoop/hdfs-site.xml.original
  become: yes

- name: adding  /opt/hadoop/etc/hadoop/hdfs-site.xml with new content ... 
  template:
    src: ../templates/template-hdfs-site-xml.j2
    dest: /opt/hadoop/etc/hadoop/hdfs-site.xml
  become: yes

- name: Creating namenode folder in the master ...
  command: "{{ item }}"

  args:
    warn: False
 
  with_items:
     - mkdir /home/hadoop/namenode
     - chown hadoop /home/hadoop/namenode/
     - chgrp hadoop /home/hadoop/namenode/

  when: inventory_hostname in groups['masters']
  become: yes

- name: Creating the file /opt/hadoop/etc/hadoop/mapred-site.xml, using template ..

  template:
    src: ../templates/template-mapred-site-xml.j2
    dest: /opt/hadoop/etc/hadoop/mapred-site.xml  

  when: inventory_hostname in groups['masters']
  become: yes

- name: Adding the names of the hosts of the slaves including the master ...
  lineinfile:
    path: /opt/hadoop/etc/hadoop/slaves
    line: "{{ item }}" 

  become: yes

  with_items:
    - central-machine 
    - node-minion-1
    - node-minion-2
    - node-minion-3
    - node-minion-4
    - node-minion-5

  when: inventory_hostname in groups['masters']

 
#- name: Modifying the file /etc/sysctl.conf  ...
#  lineinfile:
#    path: /etc/sysctl.conf
#    line: "{{ item }}"

#  with_items:
#    - net.ipv6.conf.all.disable_ipv6 = 1
#    - net.ipv6.conf.default.disable_ipv6 = 1

#  become: yes

#- name: Clearing HDFS logs, temporal files and old data on masters ...
#  script: /etc/ansible/roles/ansible-configure-install-Hadoop/scripts/clear-hdfs-masters.sh
#  when: inventory_hostname in groups['masters']
#  become: yes

#- name: Clearing HDFS logs, temporal files and old data on slaves ...
#  script: /etc/ansible/roles/ansible-configure-install-Hadoop/scripts/clear-hdfs-slaves.sh
#  when: inventory_hostname in groups['slaves']
#  become: yes  


  
  

